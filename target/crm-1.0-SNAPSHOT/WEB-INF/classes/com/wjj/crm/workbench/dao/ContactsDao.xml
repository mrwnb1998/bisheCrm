<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wjj.crm.workbench.dao.ContactsDao">
    <select id="getContactsSource" resultType="Map">
         select
        count(*) as value ,source as name
        from tbl_contacts
        group by source
    </select>
    <select id="detail" resultType="Contacts">
         select
        a.id,a.fullname,u.name as owner,c.name as customerId,a.source,a.birth,a.mphone,a.appellation,
        a.job,a.email,a.createBy,a.createTime,a.editBy,a.editTime,a.description,a.contactSummary,a.nextContactTime,a.address
        from tbl_contacts a
        join tbl_user u
        on a.owner=u.id
        join tbl_customer c
        on a.customerId=c.id
        where a.id=#{id}
    </select>
    <delete id="delete">
        delete from tbl_contacts
        where id in
        <foreach collection="array" item="ids" open="(" close=")" separator=",">

            #{ids}

        </foreach>
    </delete>
    <update id="update">
        update tbl_contacts set
fullname=#{fullname},
appellation=#{appellation},
owner=#{owner},
job=#{job},
email=#{email},
mphone=#{mphone},
birth=#{birth},
source=#{source},
editBy=#{editBy},
editTime=#{editTime},
description=#{description},
contactSummary=#{contactSummary},
nextContactTime=#{nextContactTime},
address=#{address}
where id=#{id}
    </update>
    <select id="getById" resultType="Contacts">
      select
        a.id,a.fullname,u.name as owner,c.name as customerId,a.source,a.birth,a.mphone,a.appellation,
        a.job,a.email,a.createBy,a.createTime,a.editBy,a.editTime,a.description,a.contactSummary,a.nextContactTime,a.address
        from tbl_contacts a
        join tbl_user u
        on a.owner=u.id
        join tbl_customer c
        on a.customerId=c.id
        where a.id=#{id}
    </select>
    <select id="getTotalByCondition" resultType="int">
        select count(*)
        from tbl_contacts a
        join tbl_user u
        on a.owner=u.id
        join tbl_customer c
        on a.customerId=c.id
        <where>
            <if test="name!=null and name!=''">
                a.fullname like '%' #{name} '%'
            </if>
            <if test="owner!=null and owner!=''">
                and u.name like '%' #{owner} '%'
            </if>
            <if test="customerName!=null and customerName!=''">
                and c.name like '%' #{customerName} '%'
            </if>
        </where>

    </select>
    <select id="getCustomerListByCondition" resultType="Contacts">
        select
        a.id,a.fullname,u.name as owner,c.name as customerId,a.source,a.email,a.mphone
        from tbl_contacts a
        join tbl_user u
        on a.owner=u.id
        join tbl_customer c
        on a.customerId=c.id
        <where>
            <if test="name!=null and name!=''">
                a.fullname like '%' #{name} '%'
            </if>
            <if test="owner!=null and owner!=''">
                and u.name like '%' #{owner} '%'
            </if>
            <if test="customerName!=null and customerName!=''">
                and c.name like '%' #{customerName} '%'
            </if>
        </where>
        order by a.createTime desc
        limit #{skipCount},#{pageSize}
    </select>
    <update id="hand">
        update tbl_contacts set
        owner='40f6cdea0bd34aceb77492a1656d9fb3'
        where owner=#{id}
    </update>
    <select id="getContactsListByName" resultType="Contacts">
        select * from tbl_contacts where fullname like #{cname}
    </select>

<insert id="save">
    insert into tbl_contacts(
    id,
    owner,
    source,
    customerId,
    fullname,
    appellation,
    email,
    mphone,
    job,
    birth,
    createBy,
    createTime,
    description,
    contactSummary,
    nextContactTime,
    address

    ) values (
    #{id},
    #{owner},
    #{source},
    #{customerId},
    #{fullname},
    #{appellation},
    #{email},
    #{mphone},
    #{job},
    #{birth},
    #{createBy},
    #{createTime},
    #{description},
    #{contactSummary},
    #{nextContactTime},
    #{address}
    )
</insert>
</mapper>

































